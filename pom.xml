<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.bremersee</groupId>
    <artifactId>common-service-parent</artifactId>
    <version>2.1.3</version>
    <relativePath/> <!-- lookup parent from repository -->
  </parent>

  <artifactId>peregrinus-service</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>peregrinus-service</name>
  <description>The peregrinus service</description>

  <properties>
    <github.repo>peregrinus-service</github.repo>
    <gh-pages-staging-dir>${project.build.directory}/staging</gh-pages-staging-dir>

    <start-class>org.bremersee.peregrinus.Application</start-class>

    <common-base.version>2.2.3</common-base.version>
    <peregrinus-api.version>1.0.0-SNAPSHOT</peregrinus-api.version>
    <groupman-api.version>2.1.1</groupman-api.version>

    <common-model.version>2.1.1</common-model.version>
    <comparator.version>2.2.0</comparator.version>
    <geojson.version>2.2.0</geojson.version>
    <gpx-model.version>1.1.2</gpx-model.version>
    <garmin-model.version>1.0.2</garmin-model.version>

    <dockerfile.image>peregrinus</dockerfile.image>
  </properties>

  <scm>
    <connection>scm:git:ssh://git@github.com:bremersee/peregrinus-service.git</connection>
    <developerConnection>
      scm:git:ssh://git@github.com:bremersee/peregrinus-service.git
    </developerConnection>
    <url>https://github.com/bremersee/peregrinus-service</url>
  </scm>

  <issueManagement>
    <url>https://github.com/bremersee/peregrinus-service/issues</url>
    <system>GitHub Issues</system>
  </issueManagement>

  <distributionManagement>
    <repository>
      <id>bremersee-releases</id>
      <url>https://nexus.bremersee.org/repository/maven-releases</url>
    </repository>
    <snapshotRepository>
      <id>bremersee-snapshots</id>
      <url>https://nexus.bremersee.org/repository/maven-snapshots</url>
    </snapshotRepository>
    <site>
      <id>bremersee-sites</id>
      <url>
        dav:https://nexus.bremersee.org/repository/maven-sites/peregrinus-service/${project.version}
      </url>
    </site>
  </distributionManagement>

  <dependencies>
    <!--
    <dependency>
      <groupId>org.bremersee</groupId>
      <artifactId>peregrinus-model-spring</artifactId>
      <version>${peregrinus-api.version}</version>
    </dependency>
    -->
    <dependency>
      <groupId>org.bremersee</groupId>
      <artifactId>common-base</artifactId>
      <version>${common-base.version}</version>
    </dependency>
    <dependency>
      <groupId>org.bremersee</groupId>
      <artifactId>common-model</artifactId>
      <version>${common-model.version}</version>
    </dependency>
    <dependency>
      <groupId>org.bremersee</groupId>
      <artifactId>geojson</artifactId>
      <version>${geojson.version}</version>
    </dependency>
    <dependency>
      <groupId>org.bremersee</groupId>
      <artifactId>gpx-model</artifactId>
      <version>${gpx-model.version}</version>
    </dependency>
    <dependency>
      <groupId>org.bremersee</groupId>
      <artifactId>garmin-model</artifactId>
      <version>${garmin-model.version}</version>
    </dependency>


    <dependency>
      <groupId>org.bremersee</groupId>
      <artifactId>groupman-api-spring-reactive</artifactId>
      <version>${groupman-api.version}</version>
    </dependency>
    <!--
    <dependency>
      <groupId>org.bremersee</groupId>
      <artifactId>kml-model</artifactId>
      <version>2.2.0</version>
    </dependency>
    -->

    <dependency>
      <groupId>org.bremersee</groupId>
      <artifactId>common-base-webflux-starter</artifactId>
      <version>${common-base.version}</version>
    </dependency>
    <dependency>
      <groupId>org.bremersee</groupId>
      <artifactId>common-base-actuator-starter</artifactId>
      <version>${common-base.version}</version>
    </dependency>
    <dependency>
      <groupId>org.bremersee</groupId>
      <artifactId>common-base-security-starter</artifactId>
      <version>${common-base.version}</version>
    </dependency>

    <dependency>
      <groupId>org.bremersee</groupId>
      <artifactId>comparator</artifactId>
      <version>${comparator.version}</version>
    </dependency>

    <!-- MongoDB -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-mongodb-reactive</artifactId>
    </dependency>
    <dependency>
      <groupId>org.bremersee</groupId>
      <artifactId>geojson-spring-data-mongodb</artifactId>
      <version>${geojson.version}</version>
    </dependency>
    <dependency>
      <groupId>de.flapdoodle.embed</groupId>
      <artifactId>de.flapdoodle.embed.mongo</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.modelmapper</groupId>
      <artifactId>modelmapper</artifactId>
    </dependency>

    <!-- Sleuth and zipkin -->
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-sleuth</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-sleuth-zipkin</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-zipkin</artifactId>
    </dependency>

    <!-- Config client -->
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-config</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-aop</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.retry</groupId>
      <artifactId>spring-retry</artifactId>
    </dependency>

    <!-- Eureka client -->
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
    </dependency>
    <!-- Caffeine-backed LoadBalancer Cache -->
    <!--
    <dependency>
      <groupId>com.github.ben-manes.caffeine</groupId>
      <artifactId>caffeine</artifactId>
    </dependency>
    -->

    <!-- Jwt cache -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-redis-reactive</artifactId>
    </dependency>
    <dependency>
      <groupId>it.ozimov</groupId>
      <artifactId>embedded-redis</artifactId>
    </dependency>

    <!-- OpenAPI -->
    <dependency>
      <groupId>org.springdoc</groupId>
      <artifactId>springdoc-openapi-webflux-ui</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-devtools</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-configuration-processor</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <optional>true</optional>
    </dependency>

    <dependency>
      <groupId>org.bremersee</groupId>
      <artifactId>common-base-test</artifactId>
      <version>${common-base.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.projectreactor</groupId>
      <artifactId>reactor-test</artifactId>
      <scope>test</scope>
    </dependency>
    <!--
    <dependency>
      <groupId>com.google.api-client</groupId>
      <artifactId>google-api-client</artifactId>
      <version>1.25.0</version>
    </dependency>

    <dependency>
      <groupId>com.google.maps</groupId>
      <artifactId>google-maps-services</artifactId>
      <version>0.9.1</version>
    </dependency>
    -->
  </dependencies>

</project>
